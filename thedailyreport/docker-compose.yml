version: '3.8'

services:
  db:
    image: postgres:latest
    container_name: db
    environment:
      POSTGRES_DB: news_db
      POSTGRES_USER: antonio
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    networks:
      - my_network

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    command: python manage.py runserver 0.0.0.0:8000
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    environment:
      - DATABASE_NAME=news_db
      - DATABASE_USER=antonio
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_HOST=db
      - DATABASE_PORT=5432
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    networks:
      - my_network
    volumes:
      - .:/usr/src/app

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    networks:
      - my_network
    volumes:
      - ./src:/app/src
    command: serve -s build

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - my_network

  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A thedailyreport worker --loglevel=info
    depends_on:
      - backend
      - redis
    environment:
      - DATABASE_NAME=news_db
      - DATABASE_USER=antonio
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_HOST=db
      - DATABASE_PORT=5432
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    networks:
      - my_network
    volumes:
      - .:/usr/src/app

  celery_beat:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A thedailyreport beat --loglevel=info
    depends_on:
      - backend
      - redis
    environment:
      - DATABASE_NAME=news_db
      - DATABASE_USER=antonio
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_HOST=db
      - DATABASE_PORT=5432
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    networks:
      - my_network
    volumes:
      - .:/usr/src/app

networks:
  my_network:
    driver: bridge
